from Cryptodome.Cipher import AES
from Cryptodome.Util.Padding import pad, unpad
import os

# Функция для шифрования ГОСТ 34.12-2015 (Кузнечик)
def gost256_encrypt(key, plaintext):
    cipher = AES.new(key, AES.MODE_ECB)  # Используем AES как замену ГОСТ 256 в режиме ECB
    padded_text = pad(plaintext.encode(), AES.block_size)  # Добавляем padding
    encrypted_text = cipher.encrypt(padded_text)  # Шифруем текст
    return encrypted_text

# Функция для расшифровки ГОСТ 34.12-2015 (Кузнечик)
def gost256_decrypt(key, ciphertext):
    cipher = AES.new(key, AES.MODE_ECB)  # Создаем шифр AES с тем же ключом
    decrypted_text = cipher.decrypt(ciphertext)  # Расшифровываем текст
    return unpad(decrypted_text, AES.block_size).decode()  # Убираем padding и декодируем

# Пример использования
key = os.urandom(32)  # Генерируем 256-битный ключ (32 байта)
plaintext = "almas privet"

# Шифрование
encrypted_text = gost256_encrypt(key, plaintext)
print("Зашифрованный текст ГОСТ 256:", encrypted_text.hex())

# Расшифровка
decrypted_text = gost256_decrypt(key, encrypted_text)
print("Расшифрованный текст ГОСТ 256:", decrypted_text)
